FROM ubuntu:18.04 AS deps

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get -y update \
 && apt-get -y upgrade \
 && apt-get install -y --no-install-recommends apt-utils \
 && apt-get install -y  wget

ENV HADOOP_VERSION 2.7.3
ENV HADOOP_HOME /opt/hadoop-$HADOOP_VERSION
# Create user for Spark
#RUN useradd -ms /bin/bash spark
#RUN useradd -ms /bin/bash hadoop


user root
WORKDIR /tmp
RUN cd /tmp \
RUN wget -q -O- --retry-connrefused --waitretry=1 --read-timeout=20 --timeout=15 -t 0 \
  "http://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz" \
  | tar -xz -C /opt/ \
 && rm -rf $HADOOP_HOME/share/doc
# && chown -R hadoop:hadoop $HADOOP_HOME

RUN wget https://downloads.apache.org/spark/spark-2.4.5/spark-2.4.5-bin-hadoop2.7.tgz \
        && tar xvzf spark-2.4.5-bin-hadoop2.7.tgz

FROM openjdk:8-jdk-slim AS build

#RUN apt-get update && apt-get -y install wget

WORKDIR /tmp

#RUN apt-get  install -y openjdk-8-jdk
# Spark UID
ARG spark_uid=185

# Install Spark Dependencies and Prepare Spark Runtime Environment
RUN set -ex && \
    apt-get update && \
    ln -s /lib /lib64 && \
    apt install -y bash tini libc6 libpam-modules libnss3 wget python3 python3-pip && \
    mkdir -p /opt/spark && \
    mkdir -p /opt/spark/examples && \
    mkdir -p /opt/spark/work-dir && \
    touch /opt/spark/RELEASE && \
    rm /bin/sh && \
    ln -sv /bin/bash /bin/sh && \
    ln -sv /usr/bin/tini /sbin/tini && \
    echo "auth required pam_wheel.so use_uid" >> /etc/pam.d/su && \
    chgrp root /etc/passwd && chmod ug+rw /etc/passwd && \
    ln -sv /usr/bin/python3 /usr/bin/python && \
    ln -sv /usr/bin/pip3 /usr/bin/pip \
    rm -rf /var/cache/apt/*

# Install Kerberos Client and Auth Components
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
  && apt install -yqq krb5-user \
  && rm -rf /var/cache/apt/*


# Copy previously fetched runtime components
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/bin /opt/spark/bin
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/jars /opt/spark/jars
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/python /opt/spark/python
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/R /opt/spark/R
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/sbin /opt/spark/sbin
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/yarn /opt/spark/yarn
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/conf /opt/spark/conf

# Copy Docker entry script
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/kubernetes/dockerfiles/spark/entrypoint.sh /opt/
ADD entrypoint.sh /opt
#RUN mv /usr/local/spark-2.4.5 /opt/spark
# COpy examples, data, and tests
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/examples /opt/spark/examples
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/data /opt/spark/data
#COPY --from=deps /tmp/spark-2.4.5-bin-hadoop2.7/kubernetes/tests /opt/spark/tests

# Replace out of date dependencies causing a 403 error on job launch
WORKDIR /tmp
RUN cd /tmp \
  && wget https://oak-tree.tech/documents/59/kubernetes-client-4.6.4.jar \
  && wget https://oak-tree.tech/documents/58/kubernetes-model-4.6.4.jar \
  && wget https://oak-tree.tech/documents/57/kubernetes-model-common-4.6.4.jar \
  && rm -rf /opt/spark/jars/kubernetes-client-* \
  && rm -rf /opt/spark/jars/kubernetes-model-* \
  && rm -rf /opt/spark/jars/kubernetes-model-common-* \
  && mv /tmp/kubernetes-* /usr/local/spark2.4.5/jars/


# set Hadoop
# HADOOP
ENV HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop
ENV PATH $PATH:$HADOOP_HOME/bin
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:$HADOOP_HOME/lib/native


# Set Spark runtime options
ENV SPARK_HOME /opt/spark
ENV SPARK_DIST_CLASSPATH="$HADOOP_HOME/etc/hadoop/*:$HADOOP_HOME/share/hadoop/common/lib/*:$HADOOP_HOME/share/hadoop/common/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/hdfs/lib/*:$HADOOP_HOME/share/hadoop/hdfs/*:$HADOOP_HOME/share/hadoop/yarn/lib/*:$HADOOP_HOME/share/hadoop/yarn/*:$HADOOP_HOME/share/hadoop/mapreduce/lib/*:$HADOOP_HOME/share/hadoop/mapreduce/*:$HADOOP_HOME/share/hadoop/tools/lib/*"

 
ADD gcs-connector-latest-hadoop2.jar guava-23.0.jar spark-bigquery-with-dependencies_2.11-0.14.0-beta.jar spark-sql-kafka-0-10_2.11-2.4.0.jar kafka-clients-2.2.1.jar avro-1.8.0.jar kafka_2.11-2.3.0.jar $SPARK_HOME/jars/

ADD spark-avro_2.11-2.4.0.jar elasticsearch-spark-20_2.11-6.8.7.jar $SPARK_HOME/jars/ 
ADD myjson.json /opt/
ADD core-site.xml $HADOOP_HOME/etc/hadoop
ADD spark-env.sh $SPARK_HOME/conf/

ENV GS_PROJECT_ID=serene-radius-275116
RUN echo "export SPARK_DIST_CLASSPATH=$SPARK_DIST_CLASSPATH" >> $SPARK_HOME/conf/spark-env.sh
#RUN export $SPARK_DIST_CLASSPATH
RUN echo "export LD_LIBRARY_PATH=$HADOOP_HOME/lib/native/" >> $SPARK_HOME/conf/spark-env.sh 

WORKDIR /opt/spark/work-dir
RUN chmod g+w /opt/spark/work-dir

ENTRYPOINT [ "/opt/entrypoint.sh" ]

